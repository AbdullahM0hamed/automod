#!/bin/bash

config=~/.config/automod

download() {
    if [[ $(command -v aria2c) != "" ]]
    then
        aria2c "$1" -d "$(dirname "$2")" -o "$(basename "$2")"
    elif [[ $(command -v curl) != "" ]]
    then
        curl -L "$1" > "$2"
    else
        wget "$1" -O "$2"
    fi
}

download_smali() {
    if [[ ! -f $config/smali.jar ]]
    then
        echo "Downloading Smali.jar"
        download https://bitbucket.org/JesusFreke/smali/downloads/smali-2.5.2.jar $config/smali.jar
    fi
}

download_baksmali() {
    if [[ ! -f $config/baksmali.jar ]]
    then
        echo "Downloading Baksmali.jar"
        download https://bitbucket.org/JesusFreke/smali/downloads/baksmali-2.5.2.jar $config/baksmali.jar
    fi
}

download_manifest_editor() {
    if [[ ! -f $config/manifest-editor.jar ]]
    then
        download https://github.com/WindySha/ManifestEditor/releases/download/v1.0.2/ManifestEditor-1.0.2.jar $config/manifest-editor.jar
    fi
}

get_compiled_dex() {
    if [[ ! -f $config/App.dex ]]
    then
        if [[ $(command -v kotlinc) == "" ]]
        then
            download "https://github.com/AbdullahM0hamed/automod/blob/master/App.dex?raw=true" $config/App.dex
        else
            download "https://github.com/AbdullahM0hamed/automod/raw/master/App.kt" $config/App.kt
            download "https://github.com/Sable/android-platforms/blob/master/android-30/android.jar?raw=true" $config/android.jar
            kotlinc -cp $config/android.jar -d $config/App.jar $config/App.kt
            dx --dex --output=$config/App.dex $config/App.jar
        fi
    fi
    cp $config/App.dex "$1"
}

mkdir -p $config 2> /dev/null
download_smali
download_baksmali
download_manifest_editor

smali() {
    java -jar $config/smali.jar "$@"
}

baksmali() {
    java -jar $config/baksmali.jar "$@"
}

add_automod() {
    java -jar $config/manifest-editor.jar AndroidManifest.xml -an automod.App
}

folder=$(echo "${1%.*}" | tr ' ' '_')
if [[ ! -x $folder ]]
then
    mkdir $folder
fi

classes=$(unzip -l "$1" | grep -oP "classes(\d+)?\.dex")
found=0
for class in $classes
do
    unzip -p "$1" "$class" > "$folder/$class"
    if [[ $(dx --find-usages "$folder/$class" "Landroid/app/Application;" "<init>" | grep invoke-direct) == "" ]]
    then
        rm "$folder/$class"
    else
        echo "Application found in $class"
        found=$(($found+1))
        baksmali d "$folder/$class" -o "$folder/smali_${class%.*}"
        cd "$folder"
        rm "$class"
        sed -i "s/\.super\sLandroid\/app\/Application;/.super Lautomod\/App;/" $(ack -l ".super Landroid/app/Application;")
        smali a "smali_${class%.*}" -o "$class"
        rm -rf "smali_${class%.*}"
        cd ..
    fi
done

echo unzip -d "$folder"_extracted "$1"
last=$(unzip -Z1 "$1" "classes*" | tail -1 | grep -oP "\d+")

if [[ $last -eq 0 ]]
then
    last=$(($last+2))
else
    last=$(($last+1))
fi

cp "$1" "$folder"
get_compiled_dex "$folder"/classes$last.dex
classes=$(ls $folder | grep classes)
cd "$folder"
for class in $classes
do
    zip "$1" $class
done

if [[ $found -eq 0 ]]
then
    unzip "$1" AndroidManifest.xml
    add_automod
    rm AndroidManifest.xml
    mv AndroidManifest-new.xml AndroidManifest.xml
    zip "$1" AndroidManifest.xml
    read a | echo a 
fi

mv "$1" ../"$folder"_Modded_unsigned.apk
cd ..
rm -rf "$folder"
